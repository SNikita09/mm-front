stages:         
  - build
  - test
  - deploy
  - sonarqube-check
  - sonarqube-vulnerability-report

variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Cache location for SonarQube analysis
  GIT_DEPTH: "0"  # Fetch all branches for the analysis task
  #SONAR_SCANNER_OPTS: "-Dsonar.javascript.lcov.reportPaths=coverage/lcov.info"

build-job:
  stage: build
  script:
    - echo "Compiling the code..."
    - echo "Compile complete."
  tags:
    - my-runner  # Specify your runner tag

npm-test-job:
  stage: test
  script:
    - echo "Installing dependencies..."
    - npm install  # Install dependencies
    - echo "Running npm tests with coverage..."
    #- npm run cov  # Run tests with coverage generation
  artifacts:
    paths:
      - coverage/  # Save the coverage folder as artifact
    expire_in: 1 day  # Optional: How long the coverage data will be stored
  tags:
    - my-runner  # Specify your runner tag

deploy-job:
  stage: deploy
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
  tags:
    - my-runner  # Specify your runner tag

image:
  name: sonarsource/sonar-scanner-cli:latest
  entrypoint: [""]

sonarqube-check:
  stage: sonarqube-check
  dependencies:
    - build-job
    - npm-test-job  # Ensure npm-test-job runs before this
  cache:
    policy: pull
    key: "${CI_COMMIT_SHORT_SHA}"
    paths:
      - sonar-scanner/
  tags:
    - my-runner
  script:
    - sonar-scanner #\
      #-Dsonar.sources=src \
      #-Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_BRANCH == 'main'
    - if: $CI_COMMIT_BRANCH == 'develop'

sonarqube-vulnerability-report:
  stage: sonarqube-vulnerability-report
  script:
    - 'curl -u "${SONAR_TOKEN}:" "${SONAR_HOST_URL}/api/issues/gitlab_sast_export?projectKey=my_group_projectKey&branch=${CI_COMMIT_BRANCH}&pullRequest=${CI_MERGE_REQUEST_IID}" -o gl-sast-sonar-report.json'
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_BRANCH == 'main'
    - if: $CI_COMMIT_BRANCH == 'develop'
  artifacts:
    expire_in: 1 day
    reports:
      sast: gl-sast-sonar-report.json
  tags:
    - my-runner
